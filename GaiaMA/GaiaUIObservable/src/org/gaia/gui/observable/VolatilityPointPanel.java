/**
 * Copyright (C) 2013 Gaia Transparence
 * Gaia Transparence, 1 all√©e Paul Barillon - 94300 VINCENNES
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3.0 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gaia.gui.observable;

import java.util.List;
import org.gaia.dao.referentials.FrequencyUtil;
import org.gaia.gui.common.GaiaPanel;
import org.gaia.gui.utils.GUIUtils;

/**
 *
 * @author Benjamin Frerejean
 */


public class VolatilityPointPanel extends GaiaPanel {

    /** Creates new form VolatilityPointPanel */
    public VolatilityPointPanel() {
        initComponents();

        List<String> itemList = FrequencyUtil.getTenors();
        GUIUtils.fillCombo(jComboBoxTenor, itemList);

    }

    public String getTenor(){
        return jComboBoxTenor.getSelectedItem().toString();
    }

    public String getStrike(){
        return GUIUtils.getComponentStringValue(jComboBoxFxStrikes);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTenor = new javax.swing.JLabel();
        jComboBoxTenor = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jCheckBoxPercent = new javax.swing.JCheckBox();
        jComboBoxFxStrikes = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(254, 252, 254));

        org.openide.awt.Mnemonics.setLocalizedText(jLabelTenor, org.openide.util.NbBundle.getMessage(VolatilityPointPanel.class, "VolatilityPointPanel.jLabelTenor.text")); // NOI18N

        jComboBoxTenor.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxTenor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(VolatilityPointPanel.class, "VolatilityPointPanel.jLabel1.text")); // NOI18N

        jCheckBoxPercent.setBackground(new java.awt.Color(254, 252, 254));
        jCheckBoxPercent.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxPercent, org.openide.util.NbBundle.getMessage(VolatilityPointPanel.class, "VolatilityPointPanel.jCheckBoxPercent.text")); // NOI18N

        jComboBoxFxStrikes.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxFxStrikes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBoxPercent)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelTenor)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxTenor, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxFxStrikes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTenor)
                    .addComponent(jComboBoxTenor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxFxStrikes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxPercent)
                .addContainerGap(47, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxPercent;
    private javax.swing.JComboBox jComboBoxFxStrikes;
    private javax.swing.JComboBox jComboBoxTenor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelTenor;
    // End of variables declaration//GEN-END:variables
}
