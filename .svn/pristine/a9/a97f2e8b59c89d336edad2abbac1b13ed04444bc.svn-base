/**
 * Copyright (C) 2013 Gaia Transparence Gaia Transparence, 1 all√©e Paul Barillon
 * - 94300 VINCENNES
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License as published by the Free
 * Software Foundation, either version 3.0 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */
package org.gaia.gui.trades;

import org.gaia.domain.trades.Trade;
import org.gaia.gui.common.MenuManager;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays fx spot.
 */
@ConvertAsProperties(dtd = "-//org.gaia.gui.trades//FXSpot//EN", autostore = false)
@TopComponent.Description(preferredID = "FXSpotTopComponent", iconBase="org/gaia/gui/trades/fxtrade.png", persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "org.gaia.gui.trades.FXSpotTopComponent")
@ActionReference(path = "Menu"+MenuManager.FXSpotTopComponentMenu, position = MenuManager.FXSpotTopComponent)
@TopComponent.OpenActionRegistration(displayName = "#CTL_FXSpotAction")
@Messages({
    "CTL_FXSpotAction=FX Spot",
    "CTL_FXSpotTopComponent=FX Spot Window",
    "HINT_FXSpotTopComponent=This is a FX Spot window"
})
public final class FXSpotTopComponent extends FXForwardTopComponent {

    public FXSpotTopComponent() {
        super();
        setSpot();
        setName(Bundle.CTL_FXSpotTopComponent());
        setToolTipText(Bundle.HINT_FXSpotTopComponent());
        fxGlobalInfoPanel1.tradeTypeComboBox.setSelectedItem(Trade.TradeType.BUY_SELL.name);
    }

    @Override
    public void initContext() {
        super.initContext();
    }

    @Override
    public void loadByTrade(Trade _trade) {
        setTrade(_trade);
        fxGlobalInfoPanel1.setTrade(getTrade(), false);
        setDisplayName(getDisplayName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 82, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 113, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        initContext();
    }

    @Override
    public void componentClosed() {
        super.componentClosed();
    }

    @Override
    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    @Override
    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
