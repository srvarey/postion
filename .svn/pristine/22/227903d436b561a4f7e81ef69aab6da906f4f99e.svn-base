/**
 * Copyright (C) 2013 Gaia Transparence
 * Gaia Transparence, 1 all√©e Paul Barillon - 94300 VINCENNES
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3.0 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gaia.gui.assets;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import org.gaia.dao.jade.DAOCallerAgent;
import org.gaia.dao.legalEntity.LegalEntityAccessor;
import org.gaia.dao.referentials.CurrencyAccessor;
import org.gaia.dao.referentials.DomainValuesAccessor;
import org.gaia.domain.utils.StringUtils;
import org.gaia.domain.legalEntity.BoAccount;
import org.gaia.domain.legalEntity.BoAccountIntermediary;
import org.gaia.domain.legalEntity.LegalEntity;
import org.gaia.gui.common.GaiaTopComponent;
import org.gaia.gui.common.MenuManager;
import org.gaia.gui.utils.GUIUtils;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays BO Accounts.
 */
@ConvertAsProperties( dtd = "-//org.gaia.gui.legalentity//BoAccount//EN", autostore = false)
@TopComponent.Description(    preferredID = "BoAccountTopComponent", persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "org.gaia.gui.legalentity.BoAccountTopComponent")
@ActionReference(path = "Menu"+MenuManager.BoAccountTopComponentMenu , position = MenuManager.BoAccountTopComponent )
@TopComponent.OpenActionRegistration(    displayName = "#CTL_BoAccountAction", preferredID = "BoAccountTopComponent")
@Messages({"CTL_BoAccountAction=BO Account", "CTL_BoAccountTopComponent=BO Accounts", "HINT_BoAccountTopComponent=This is a BO Account window"})


public final class BoAccountTopComponent extends GaiaTopComponent {

    BoAccount account = new BoAccount();
    ArrayList<BoAccountIntermediary> intermediaryList = new ArrayList<>();
    public static final String BO_ACCOUNT_TYPES="boAccountTypes";
    private static final Logger logger = Logger.getLogger(BoAccountTopComponent.class);

    public BoAccountTopComponent() {
        initComponents();
        setName(Bundle.CTL_BoAccountTopComponent());
        setToolTipText(Bundle.HINT_BoAccountTopComponent());
    }
    @Override
    public void initContext(){
        try {
            intermediaryjTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            /** looking types */

            List<String> types = (List)DAOCallerAgent.callMethod(DomainValuesAccessor.class, DomainValuesAccessor.GET_DOMAIN_VALUES_BY_NAME, BO_ACCOUNT_TYPES);
            GUIUtils.fillCombo(jComboBoxAccountType, types);

            /** looking currencies */
            List<String> currencies = (List)DAOCallerAgent.callMethod(CurrencyAccessor.class, CurrencyAccessor.LOAD_CURRENCY_CODES);
            GUIUtils.fillCombo(jComboBoxCurrency, currencies);
        } catch (Exception ex) {
            logger.error(StringUtils.formatErrorMessage(ex));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldClientName = new javax.swing.JTextField();
        jButtonFindClient = new javax.swing.JButton();
        jLabelAccountManagerId = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldIntermediaryDefault = new javax.swing.JTextField();
        jLabelClientId = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldAccountManager = new javax.swing.JTextField();
        jButtonFindCCP = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxAccountType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxCurrency = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldIBAN = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSaveAsNew = new javax.swing.JButton();
        jButtonLoad = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBoAccounts = new javax.swing.JTable(){

            public boolean isCellEditable(int row, int column) {
                return false;
            };
        };
        jLabel7 = new javax.swing.JLabel();
        jTextFieldAccountCode = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        intermediaryjTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        addIntermediaryButton = new javax.swing.JButton();
        makeDefaultButton = new javax.swing.JButton();
        removeIntermediaryjButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(254, 252, 254));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabel1.text")); // NOI18N

        jTextFieldClientName.setText(org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jTextFieldClientName.text")); // NOI18N
        jTextFieldClientName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextFieldClientNamePropertyChange(evt);
            }
        });

        jButtonFindClient.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonFindClient, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jButtonFindClient.text")); // NOI18N
        jButtonFindClient.setName("jButtonFindClient"); // NOI18N
        jButtonFindClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFindClientActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabelAccountManagerId, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabelAccountManagerId.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabel2.text")); // NOI18N

        jTextFieldIntermediaryDefault.setEditable(false);
        jTextFieldIntermediaryDefault.setText(org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jTextFieldIntermediaryDefault.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelClientId, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabelClientId.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabel3.text")); // NOI18N

        jTextFieldAccountManager.setText(org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jTextFieldAccountManager.text")); // NOI18N

        jButtonFindCCP.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonFindCCP, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jButtonFindCCP.text")); // NOI18N
        jButtonFindCCP.setFocusTraversalPolicyProvider(true);
        jButtonFindCCP.setName("jButtonFindCCP"); // NOI18N
        jButtonFindCCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFindCCPActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabel4.text")); // NOI18N

        jComboBoxAccountType.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxAccountType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabel5.text")); // NOI18N

        jComboBoxCurrency.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxCurrency.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
        jComboBoxCurrency.setName("jComboBoxCurrency"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabel6.text")); // NOI18N

        jTextFieldIBAN.setText(org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jTextFieldIBAN.text")); // NOI18N

        jButtonSave.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonSave, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jButtonSave.text")); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonDelete, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jButtonDelete.text")); // NOI18N
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonSaveAsNew.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonSaveAsNew, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jButtonSaveAsNew.text")); // NOI18N
        jButtonSaveAsNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAsNewActionPerformed(evt);
            }
        });

        jButtonLoad.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(jButtonLoad, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jButtonLoad.text")); // NOI18N
        jButtonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadActionPerformed(evt);
            }
        });

        jTableBoAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {"Id", "Client", "Manager", "Type"    }
        ));
        jTableBoAccounts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBoAccountsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableBoAccounts);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabel7.text")); // NOI18N

        jTextFieldAccountCode.setText(org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jTextFieldAccountCode.text")); // NOI18N

        intermediaryjTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        intermediaryjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        intermediaryjTable.setTableHeader(null);
        jScrollPane2.setViewportView(intermediaryjTable);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.jLabel8.text")); // NOI18N

        addIntermediaryButton.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(addIntermediaryButton, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.addIntermediaryButton.text")); // NOI18N
        addIntermediaryButton.setToolTipText(org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.addIntermediaryButton.toolTipText")); // NOI18N
        addIntermediaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addIntermediaryButtonActionPerformed(evt);
            }
        });

        makeDefaultButton.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(makeDefaultButton, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.makeDefaultButton.text")); // NOI18N
        makeDefaultButton.setToolTipText(org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.makeDefaultButton.toolTipText")); // NOI18N
        makeDefaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeDefaultButtonActionPerformed(evt);
            }
        });

        removeIntermediaryjButton.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(removeIntermediaryjButton, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.removeIntermediaryjButton.text")); // NOI18N
        removeIntermediaryjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeIntermediaryjButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(195, 229, 255));
        org.openide.awt.Mnemonics.setLocalizedText(clearButton, org.openide.util.NbBundle.getMessage(BoAccountTopComponent.class, "BoAccountTopComponent.clearButton.text")); // NOI18N
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonLoad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSaveAsNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDelete))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBoxAccountType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldAccountManager)
                                .addComponent(jTextFieldIntermediaryDefault, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                .addComponent(jComboBoxCurrency, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldIBAN)
                                .addComponent(jTextFieldAccountCode, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldClientName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonFindCCP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelAccountManagerId, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonFindClient)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelClientId, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(removeIntermediaryjButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addIntermediaryButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(makeDefaultButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonLoad)
                            .addComponent(clearButton))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1)
                                            .addComponent(jButtonFindClient))
                                        .addGap(50, 92, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jTextFieldClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jTextFieldIntermediaryDefault, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel8))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jTextFieldAccountManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jButtonFindCCP)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabelAccountManagerId, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(2, 2, 2)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(jComboBoxCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6)
                                            .addComponent(jTextFieldIBAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldAccountCode)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(addIntermediaryButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(makeDefaultButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(removeIntermediaryjButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonSave)
                                    .addComponent(jButtonDelete)
                                    .addComponent(jButtonSaveAsNew)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelClientId, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFindClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFindClientActionPerformed
        /** find entity */
        LegalEntity le = GUIUtils.findLegalEntity(null);
        if (le != null) {
            jLabelClientId.setText(le.getLegalEntityId().toString());
            jTextFieldClientName.setText(le.getShortName());

        }

    }//GEN-LAST:event_jButtonFindClientActionPerformed

    private void jButtonFindCCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFindCCPActionPerformed
        /** find entity */
        LegalEntity le = GUIUtils.findCounterParty();
        if (le != null) {
            jLabelAccountManagerId.setText(le.getLegalEntityId().toString());
            jTextFieldAccountManager.setText(le.getShortName());
        }
    }//GEN-LAST:event_jButtonFindCCPActionPerformed
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        /** Save */
        save();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        try {
            /** delete */
            DAOCallerAgent.callMethod(LegalEntityAccessor.class,LegalEntityAccessor.DELETE_BO_ACCOUNT,account);
        } catch (Exception ex) {
            logger.error(StringUtils.formatErrorMessage(ex));
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonSaveAsNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveAsNewActionPerformed

        account = new BoAccount();
        save();
    }//GEN-LAST:event_jButtonSaveAsNewActionPerformed

    private void jButtonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadActionPerformed
        try {
            /**load */
            List<BoAccount> accounts = (List)DAOCallerAgent.callMethod(LegalEntityAccessor.class, LegalEntityAccessor.GET_BO_ACCOUNTS, GUIUtils.getComponentIntegerValue(jLabelClientId), GUIUtils.getComponentIntegerValue(jLabelAccountManagerId), GUIUtils.getComponentStringValue(jComboBoxAccountType));
            DefaultTableModel model = (DefaultTableModel) jTableBoAccounts.getModel();
            while (jTableBoAccounts.getRowCount() > 0) {
                model.removeRow(0);
            }
            int i = 0;
            if (accounts != null) {
                for (BoAccount account_ : accounts) {
                    model.addRow(new Vector<>());
                    model.setValueAt(account_.getAccountId(), i, 0);
                    model.setValueAt(account_.getClient().getShortName(), i, 1);
                    model.setValueAt(account_.getAccountManager().getShortName(), i, 2);
                    model.setValueAt(account_.getType(), i, 3);
                    i++;
                }
            }
        } catch (Exception ex) {
            logger.error(StringUtils.formatErrorMessage(ex));
        }
    }//GEN-LAST:event_jButtonLoadActionPerformed

    private void jTableBoAccountsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBoAccountsMouseClicked
        /** select */
        DefaultTableModel model = (DefaultTableModel) jTableBoAccounts.getModel();
        int row = jTableBoAccounts.getSelectedRow();
        if (row >= 0) {
            Integer id = GUIUtils.getComponentIntegerValue(model.getValueAt(row, 0));
            if (id != null) {
                try {
                    account=(BoAccount)DAOCallerAgent.callMethod(LegalEntityAccessor.class ,LegalEntityAccessor.GET_BO_ACCOUNT,id);
                    if (account.getClient() != null) {
                        jLabelClientId.setText(account.getClient().getLegalEntityId().toString());
                        jTextFieldClientName.setText(account.getClient().getShortName());
                    }
                    intermediaryList.clear();
                    intermediaryList.addAll(account.getBoAccountIntermediaryCollection());

                    BoAccountIntermediary intermediary = LegalEntityAccessor.getDefaultIntermediaryFromList(intermediaryList);
                    if (intermediary != null) {
                        jTextFieldIntermediaryDefault.setText(intermediary.getLegalEntity().getShortName());
                    }


                    if (account.getAccountManager() != null) {
                        jLabelAccountManagerId.setText(account.getAccountManager().getLegalEntityId().toString());
                        jTextFieldAccountManager.setText(account.getAccountManager().getShortName());
                    }
                    jComboBoxAccountType.setSelectedItem(account.getType());
                    jComboBoxCurrency.setSelectedItem(account.getCurrency());
                    jTextFieldAccountCode.setText(account.getAccountCode());
                    fillIntermediaryJtable(intermediaryList);
                } catch (Exception ex) {
                    logger.error(StringUtils.formatErrorMessage(ex));
                }
            }
        }
    }//GEN-LAST:event_jTableBoAccountsMouseClicked

    private void addIntermediaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addIntermediaryButtonActionPerformed
        /** if selection acount  */
        if (account != null) {
            LegalEntity le = GUIUtils.findCounterParty();
            if (le != null) {
                BoAccountIntermediary boAccountIntermediary = new BoAccountIntermediary();
                boAccountIntermediary.setAccount(account);
                boAccountIntermediary.setLegalEntity(le);
                if (intermediaryList == null || intermediaryList.isEmpty()) {
                    boAccountIntermediary.setIsdefault(Boolean.TRUE);
                    jTextFieldIntermediaryDefault.setText(boAccountIntermediary.getLegalEntity().getShortName());
                } else {
                    boAccountIntermediary.setIsdefault(Boolean.FALSE);
                }
                intermediaryList.add(boAccountIntermediary);
                fillIntermediaryJtable(intermediaryList);
            }
        }

    }//GEN-LAST:event_addIntermediaryButtonActionPerformed
    private void fillIntermediaryJtable(Collection<BoAccountIntermediary> boAccountIntermediaryList) {
        DefaultTableModel model = (DefaultTableModel) intermediaryjTable.getModel();
        model.getDataVector().clear();
        model.setRowCount(0);

        BoAccountIntermediary[] data = new BoAccountIntermediary[1];
        for (BoAccountIntermediary boAccountIntermediary : boAccountIntermediaryList) {
            data[0] = boAccountIntermediary;
            model.addRow(data);
        }
        model.fireTableDataChanged();
    }
    private void makeDefaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeDefaultButtonActionPerformed
        /** if selection row*/
        if (intermediaryjTable.getSelectedRow() >= 0) {
            BoAccountIntermediary old = LegalEntityAccessor.getDefaultIntermediaryFromList(intermediaryList);

            BoAccountIntermediary newInter = (BoAccountIntermediary) intermediaryList.get(intermediaryjTable.getSelectedRow());
            if (newInter.equals(old)) {
                return;
            }
            for (BoAccountIntermediary boAccountIntermediary : intermediaryList) {
                if (boAccountIntermediary.equals(old)) {
                    boAccountIntermediary.setIsdefault(Boolean.FALSE);
                } else if (boAccountIntermediary.equals(newInter)) {
                    boAccountIntermediary.setIsdefault(Boolean.TRUE);
                }
            }
            jTextFieldIntermediaryDefault.setText(newInter.getLegalEntity().getShortName());
            fillIntermediaryJtable(intermediaryList);
        }


    }//GEN-LAST:event_makeDefaultButtonActionPerformed

    private void removeIntermediaryjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeIntermediaryjButtonActionPerformed
        if (intermediaryjTable.getSelectedRow() >= 0) {
            intermediaryList.remove(intermediaryjTable.getSelectedRow());
            fillIntermediaryJtable(intermediaryList);
        }
    }//GEN-LAST:event_removeIntermediaryjButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        jTextFieldAccountCode.setText(null);
        jTextFieldAccountManager.setText(null);
        jTextFieldClientName.setText(null);
        jTextFieldIBAN.setText(null);
        jTextFieldIntermediaryDefault.setText(null);
        intermediaryList.clear();
        fillIntermediaryJtable(intermediaryList);
        jLabelAccountManagerId.setText(null);
        jLabelClientId.setText(null);

    }//GEN-LAST:event_clearButtonActionPerformed

    private void jTextFieldAccountCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAccountCodeActionPerformed

    }//GEN-LAST:event_jTextFieldAccountCodeActionPerformed

    private void jTextFieldClientNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextFieldClientNamePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldClientNamePropertyChange

    /**save */
    public void save() {
        Integer id = GUIUtils.getComponentIntegerValue(jLabelClientId);
        if (id != null) {
            try {
                LegalEntity client=(LegalEntity) DAOCallerAgent.callMethod(LegalEntityAccessor.class, LegalEntityAccessor.GET_LEGAL_ENTITY_BY_ID, id);
                account.setClient(client);
            } catch (Exception ex) {
                logger.error(StringUtils.formatErrorMessage(ex));
            }
        }
        account.setBoAccountIntermediaryCollection(intermediaryList);

        id = GUIUtils.getComponentIntegerValue(jLabelAccountManagerId);
        if (id != null) {
            try {
                LegalEntity accountManager=(LegalEntity)DAOCallerAgent.callMethod(LegalEntityAccessor.class, LegalEntityAccessor.GET_LEGAL_ENTITY_BY_ID, GUIUtils.getComponentIntegerValue(jLabelAccountManagerId));
                account.setAccountManager(accountManager);
            } catch (Exception ex) {
                logger.error(StringUtils.formatErrorMessage(ex));
            }
        }
        account.setType(GUIUtils.getComponentStringValue(jComboBoxAccountType));
        account.setCurrency(GUIUtils.getComponentStringValue(jComboBoxCurrency));
        account.setIban(jTextFieldIBAN.getText());
        account.setAccountCode(jTextFieldAccountCode.getText());
        if (account.getClient() == null) {
            JOptionPane.showMessageDialog(this, "Missing client", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (account.getAccountManager() == null) {
            JOptionPane.showMessageDialog(this, "Missing account manager", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                DAOCallerAgent.callMethod(LegalEntityAccessor.class, LegalEntityAccessor.STORE_BO_ACCOUNT, account);
            } catch (Exception ex) {
                logger.error(StringUtils.formatErrorMessage(ex));
            }
            JOptionPane.showMessageDialog(this, "Saved");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addIntermediaryButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTable intermediaryjTable;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonFindCCP;
    private javax.swing.JButton jButtonFindClient;
    private javax.swing.JButton jButtonLoad;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSaveAsNew;
    private javax.swing.JComboBox jComboBoxAccountType;
    private javax.swing.JComboBox jComboBoxCurrency;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelAccountManagerId;
    private javax.swing.JLabel jLabelClientId;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableBoAccounts;
    private javax.swing.JTextField jTextFieldAccountCode;
    private javax.swing.JTextField jTextFieldAccountManager;
    private javax.swing.JTextField jTextFieldClientName;
    private javax.swing.JTextField jTextFieldIBAN;
    private javax.swing.JTextField jTextFieldIntermediaryDefault;
    private javax.swing.JButton makeDefaultButton;
    private javax.swing.JButton removeIntermediaryjButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
      initContext();
    }

    @Override
    public void componentClosed() {

    }

    void writeProperties(java.util.Properties p) {

        p.setProperty("version", "1.0");

    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");

    }

}
